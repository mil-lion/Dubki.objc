//
//  TrainStep.m
//  Dubki2
//
//  Created by –ò–≥–æ—Ä—å –ú–æ—Ä–µ–Ω–∫–æ on 18.11.15.
//  Copyright ¬© 2015 LionSoft LLC. All rights reserved.
//

#import "TrainStep.h"
#import "Date.h"
#import "String.h"
#import "ScheduleService.h"

#pragma mark - Private Interface

@interface TrainStep ()

@property (strong, nonatomic) NSString *trainName; // –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–æ–µ–∑–¥–∞ –∏–ª–∏ –≤–µ—Ç–∫–∏ –º–µ—Ç—Ä–æ
@property (strong, nonatomic) NSString *stops;     // –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –∂/–¥ –∏–ª–∏ —Å—Ç–∞–Ω—Ü–∏–∏ –ø–µ—Ä–µ—Å–∞–¥–∫–∏ –º–µ—Ç—Ä–æ

@end

#pragma mark - Implementation

@implementation TrainStep

- (id)initWithDeparture:(NSDate *)departure
                andFrom:(NSDictionary<NSString *, NSObject *> *)from
                  andTo:(NSDictionary<NSString *, NSObject *> *)to {
    self = [super init];
    
    if (self) {
        [self setNearestTrainByDeparture:departure andFrom:from andTo:to];
    }
    
    return self;
}

- (id)initWithArrival:(NSDate *)arrival
              andFrom:(NSDictionary<NSString *, NSObject *> *)from
                andTo:(NSDictionary<NSString *, NSObject *> *)to {
    self = [super init];
    
    if (self) {
        [self setNearestTrainByArrival:arrival andFrom:from andTo:to];
    }
    
    return self;
}

- (NSString *)title {
    return NSLocalizedString(@"Train", comment: @""); // "üöä –≠–ª–µ–∫—Ç—Ä–∏—á–∫–∞"
}

- (NSString *)detail {
    NSString *timeDeparture = [self.departure stringByFormat:@"HH:mm"];
    NSString *timeArrival = [self.arrival stringByFormat:@"HH:mm"];
    NSString *detailFormat = NSLocalizedString(@"TrainDetailFormat", comment: @"");
    return [NSString stringWithFormat:detailFormat, self.trainName, timeDeparture, timeArrival, self.stops, self.to];
}

//NSString *RASP_YANDEX_URL = "https://rasp.yandex.ru/";
NSString *RASP_YANDEX_URL = @"https://rasp.yandex.ru/search/?when=%@&fromId=%@&toId=%@";

/*
 Returns the nearest train by departure time
 
 Args:
 from(Dictionary): place of departure
 to(Dictionary): place of arrival
 departure(NSDate): time of departure
 
 Note:
 'from' and 'to' should not be equal and should be in STATIONS
 */
- (void)setNearestTrainByDeparture:(NSDate *)departure
                           andFrom:(NSDictionary<NSString *, NSObject *> *)from
                             andTo:(NSDictionary<NSString *, NSObject *> *)to {
    //assert _from in STATIONS
    //assert _to in STATIONS
    
    NSString *fromCode = (NSString *)from[@"code"];
    NSString *toCode = (NSString *)to[@"code"];
    
    // –ø–æ–ª—É—á–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ —ç–ª–µ–∫—Ç—Ä–∏—á–µ–∫
    NSArray *trains = [[ScheduleService sharedInstance] getScheduleTrainByFrom:fromCode
                                                                         andTo:toCode
                                                                  andTimestamp:departure];
    
    if (trains == nil || trains.count == 0) {
        //TODO: –¥–æ–±–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        Log(@"–ù–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ —ç–ª–µ–∫—Ç—Ä–∏—á–µ–∫")
        return;
    }
    
    // –ø–æ–∏—Å–∫ –±–ª–∏–∂–∞–π—à–µ–≥–æ —Ä–µ–π—Å–∞ (–º–∏–Ω–∏–º—É–º –æ–∂–∏–¥–∞–Ω–∏—è)
    NSTimeInterval minInterval = 24*60*60; // –º–∏–Ω. –∏–Ω—Ç–µ—Ä–≤–∞–ª (—Å—É—Ç–∫–∏)
    NSDictionary *trainInfo = nil; // –Ω–∞–π–¥–µ–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–µ–∑–¥–µ
    for (NSDictionary *train in trains) {
        NSDate *departureTime = ((NSString *)train[@"departure"]).date;
        NSTimeInterval interval = [departureTime timeIntervalSinceDate:departure];
        if (interval > 0 && interval < minInterval) {
            minInterval = interval;
            trainInfo = train;
        }
    }
    
    if (trainInfo == nil) {
        //Log(@"–ë–ª–∏–∂–∞–π—à–∞—è —ç–ª–µ–∫—Ç—Ä–∏—á–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        // get nearest train on next day
        NSDate *newDeparture = [[departure dateByAddingDay:1] dateByWithTime:@"00:00"];
        [self setNearestTrainByDeparture:newDeparture andFrom:from andTo:to];
        return;
    }
    
    self.from = (NSString *)from[@"title"];
    self.to = (NSString *)to[@"title"];
    self.trainName = (NSString *)trainInfo[@"title"]; //"–ö—É–±–∏–Ω–∫–∞ 1 - –ú–æ—Å–∫–≤–∞ (–ë–µ–ª–æ—Ä—É—Å—Å–∫–∏–π –≤–æ–∫–∑–∞–ª)"
    self.stops = (NSString *)trainInfo[@"stops"]; //"–≤–µ–∑–¥–µ"
    self.departure = ((NSString *)trainInfo[@"departure"]).date;
    self.arrival = ((NSString *)trainInfo[@"arrival"]).date;
    self.duration = (NSInteger)([self.arrival timeIntervalSinceDate:self.departure] / 60.0 + 0.5);
    //self.duration = ((NSNumber *)trainInfo[@"duration"]).integerValue / 60;
    self.url = [NSString stringWithFormat:RASP_YANDEX_URL, [departure stringByFormat:@"yyyy-MM-dd"], fromCode, toCode];
}

/*
 Returns the nearest train by arrival time
 
 Args:
 from(Dictionary): place of departure
 to(Dictionary): place of arrival
 arrival(NSDate): time of arrival
 
 Note:
 'from' and 'to' should not be equal and should be in STATIONS
 */
- (void)setNearestTrainByArrival:(NSDate *)arrival
                         andFrom:(NSDictionary<NSString *, NSObject *> *)from
                           andTo:(NSDictionary<NSString *, NSObject *> *)to {
    //assert _from in STATIONS
    //assert _to in STATIONS
    
    NSString *fromCode = (NSString *)from[@"code"];
    NSString *toCode = (NSString *)to[@"code"];
    
    // –ø–æ–ª—É—á–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ —ç–ª–µ–∫—Ç—Ä–∏—á–µ–∫
    NSArray<NSDictionary *> *trains = [[ScheduleService sharedInstance] getScheduleTrainByFrom:fromCode
                                                                                         andTo:toCode
                                                                                  andTimestamp:arrival];
    
    if (trains == nil || trains.count == 0) {
        //TODO: –¥–æ–±–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        Log(@"–ù–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ —ç–ª–µ–∫—Ç—Ä–∏—á–µ–∫")
        return;
    }
    
    // –ø–æ–∏—Å–∫ –±–ª–∏–∂–∞–π—à–µ–≥–æ —Ä–µ–π—Å–∞ (–º–∏–Ω–∏–º—É–º –æ–∂–∏–¥–∞–Ω–∏—è)
    NSTimeInterval minInterval = 24*60*60; // –º–∏–Ω. –∏–Ω—Ç–µ—Ä–≤–∞–ª (—Å—É—Ç–∫–∏)
    NSDictionary *trainInfo = nil; // –Ω–∞–π–¥–µ–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–µ–∑–¥–µ
    for (NSDictionary *train in trains) {
        NSDate *arrivalTime = ((NSString *)train[@"arrival"]).date;
        NSTimeInterval interval = [arrival timeIntervalSinceDate:arrivalTime];
        if (interval > 0 && interval < minInterval) {
            minInterval = interval;
            trainInfo = train;
        }
    }
    
    if (trainInfo == nil) {
        //Log(@"–ë–ª–∏–∂–∞–π—à–∞—è —ç–ª–µ–∫—Ç—Ä–∏—á–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        // get nearest train on next day
        NSDate *newArrival = [[arrival dateByAddingDay:-1] dateByWithTime:@"23:59"];
        [self setNearestTrainByArrival:newArrival andFrom:from andTo:to];
         return;
    }
    
    self.from = (NSString *)from[@"title"];
    self.to = (NSString *)to[@"title"];
    self.trainName = (NSString *)trainInfo[@"title"]; //"–ö—É–±–∏–Ω–∫–∞ 1 - –ú–æ—Å–∫–≤–∞ (–ë–µ–ª–æ—Ä—É—Å—Å–∫–∏–π –≤–æ–∫–∑–∞–ª)"
    self.stops = (NSString *)trainInfo[@"stops"]; //"–≤–µ–∑–¥–µ"
    self.departure = ((NSString *)trainInfo[@"departure"]).date;
    self.arrival = ((NSString *)trainInfo[@"arrival"]).date;
    self.duration = (NSInteger)([self.arrival timeIntervalSinceDate:self.departure] / 60.0 + 0.5);
    //self.duration = ((NSNumber *)trainInfo[@"duration"]).integerValue / 60;
    self.url = [NSString stringWithFormat:RASP_YANDEX_URL, [arrival stringByFormat:@"yyyy-MM-dd"], fromCode, toCode];
}

@end
